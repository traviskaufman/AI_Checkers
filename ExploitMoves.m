function [Jump,list_of_S,list_of_moves] = ExploitMoves(S,a,b,Jump,list_of_S,list_of_moves,RW)

if (S(b,a)==3+RW) % if king piece, then check backward move (first)
    for d=0:1
        ng=Neighbor(a,b,d,RW,0); %FB=0 or check backward
        if (ng ~= 0) %neighbor is inside the board
            [Jump,list_of_S,list_of_moves] = CheckMove(S,a,b,ng(1),ng(2),d,Jump,list_of_S,list_of_moves,RW,0);
        end
    end
end

if ((S(b,a)==1+RW) || (S(b,a)==3+RW)) %check there is a piece to move forward
    for d=0:1
        ng=Neighbor(a,b,d,RW,1); %FB=1 or check forward
        if (ng ~= 0) %neighbor is inside the board
            [Jump,list_of_S,list_of_moves] = CheckMove(S,a,b,ng(1),ng(2),d,Jump,list_of_S,list_of_moves,RW,1);
        end
    end
end
